/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E     &kp R  &kp T             &kp Y      &kp U  &kp I            &kp O    &kp P     &kp BSPC
&kp TAB           &kp A  &kp S  &kp D     &kp F  &kp G             &kp H      &kp J  &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B             &kp N      &kp M  &kp COMMA        &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &kp LGUI  &mo 1  &kp LEFT_SHIFT    &kp SPACE  &mo 2  &kp RIGHT_SHIFT
            >;
        };

        lower_layer {
            display-name = "Lower Layer";
            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5            &kp N6     &kp N7    &kp N8                &kp N9                 &kp N0         &kp DEL
&trans     &trans  &trans  &trans    &trans  &trans            &kp MINUS  &kp APOS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp ENTER
&kp LSHFT  &trans  &trans  &trans    &trans  &trans            &trans     &trans    &trans                &trans                 &trans         &trans
                           &kp LGUI  &trans  &kp LEFT_SHIFT    &kp SPACE  &trans    &kp RIGHT_SHIFT
            >;
        };

        raise_layer {
            display-name = "Raise Layer";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT         &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans            &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans            &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp LEFT_SHIFT    &kp SPACE  &trans     &kp RALT
            >;
        };

        Both {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5            &kp F6            &kp F7     &kp F8      &kp F9             &kp F10          &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4      &kp LEFT   &kp DOWN    &kp UP_ARROW       &kp RIGHT        &trans   &kp LG(LA(SPACE))
&trans      &trans        &trans        &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT        &trans     &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans   &trans
                                        &kp LGUI      &trans            &kp LEFT_SHIFT    &kp SPACE  &trans      &kp RIGHT_ALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        activate_both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
