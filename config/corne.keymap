/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E     &kp R  &kp T             &kp Y      &kp U  &kp I            &kp O    &kp P     &kp BSPC
&kp TAB           &kp A  &kp S  &kp D     &kp F  &kp G             &kp H      &kp J  &kp K            &kp L    &kp SEMI  &kp ENTER
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B             &kp N      &kp M  &kp COMMA        &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &kp LGUI  &mo 1  &kp LEFT_SHIFT    &kp SPACE  &mo 2  &kp RIGHT_SHIFT
            >;
        };

        lower_layer {
            display-name = "Lower Layer";
            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3      &kp N4  &kp N5            &kp N6     &kp N7  &kp N8  &kp N9  &kp N0        &kp BACKSPACE
&trans     &trans  &trans  &kp DELETE  &trans  &trans            &kp MINUS  &kp N4  &kp N5  &kp N6  &kp ASTERISK  &kp ENTER
&kp LSHFT  &trans  &trans  &trans      &trans  &trans            &kp PLUS   &kp N1  &kp N2  &kp N3  &kp FSLH      &kp PERIOD
                           &kp LGUI    &trans  &kp LEFT_SHIFT    &kp EQUAL  &trans  &kp N0
            >;
        };

        raise_layer {
            display-name = "Raise Layer";
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT          &kp HASH  &kp DLLR  &kp PRCNT         &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR         &kp RPAR  &kp BSPC
&kp TILDE  &trans    &kp LEFT_BRACE  &kp FSLH  &kp APOS  &kp LBKT          &kp RBKT   &kp MINUS  &kp BSLH   &kp RIGHT_BRACE  &trans    &trans
&kp PIPE   &trans    &trans          &trans    &trans    &trans            &trans     &trans     &kp COMMA  &kp PERIOD       &trans    &trans
                                     &kp LGUI  &trans    &kp LEFT_SHIFT    &kp SPACE  &trans     &kp RALT
            >;
        };

        Both {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3    &kp F4   &trans            &kp PAGE_UP    &trans      &trans             &trans           &trans  &trans
&trans  &kp F5  &kp F6   &kp F7    &kp F8   &trans            &kp LEFT       &kp DOWN    &kp UP_ARROW       &kp RIGHT        &trans  &kp LG(LA(SPACE))
&trans  &kp F9  &kp F10  &kp F11   &kp F12  &trans            &kp PAGE_DOWN  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans
                         &kp LGUI  &trans   &kp LEFT_SHIFT    &kp SPACE      &trans      &kp RIGHT_ALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        activate_both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
